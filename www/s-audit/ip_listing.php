<?php

//============================================================================
//
// ip_listing.php
// --------------
//
// This produces a list of used IP addresses from three sources. First, it
// uses the results of a scan run by the becta_subnet_audit.sh script, and
// stored in the IP_LIST_FILE. Second, it pulls IP addresses out of the
// audit files, and finally, it can use an optional "reserved list", stored
// in the IP_RES_FILE.
//
// A used address is filled in according to the IP_LIST_FILE.  Addresses
// which are not in the IP_LIST_FILE, but are found in audit files are
// displayed in a way that indicates they may be used, but weren't found by
// the last scan. Addresses not in the IP_LIST_FILE but found in audit
// files in the "obsolete" audits are also shown.
//
// R Fisher
//
// v1.0
// Please record changes below.
//
// v1.1 Big changes as it now uses the becta_subnet_audit.sh script, rather
//      than nmap. The former generates more information than the latter.
//      Added support for IP_RES_LIST. Heavier annotation. New key. RDF
//      20/10/2009
//
//============================================================================

require_once("$_SERVER[DOCUMENT_ROOT]/_conf/site_config.php");
require_once(ROOT . "/_lib/reader_file_classes.php");
require_once(ROOT . "/_lib/display_classes.php");
require_once(ROOT . "/_lib/ip_listing_classes.php");

//------------------------------------------------------------------------------
// SCRIPT STARTS HERE

$pg = new audPage("IP address list", $grid->server_count(), $grid->zone_toggle());


// We make three lists of used IP addresses, which have descending
// "priorities"
// s_list comes from the becta_subnet_audit.sh scan file -- considered
//        canonical, coloured green 
// l_list is active machines, pulled from the audit file. An address used
//        here but not in s_list is coloured amber
// o_list comes from the obsolete machine list. These addresses are red
// h_list comes from the hand-made "reserved" list

$s_list = $s_nets = $s_addrs = $l_list = $o_list = $h_list = $h_nets =
$h_addrs = $o_list = array();

// We should always be able to pull IP addresses out of the audit files

$live_map = new ZoneFileMap(LIVE_DIR);
$l_list = new GetIPAddrsAudits($live_map);

$obs_map = new ZoneFileMap(OBSOLETE_DIR, true);
$o_list = new GetIPAddrsAudits($obs_map);

// And if we have the IP_LIST_FILE generated by becta_subnet_audit.sh, we'll
// get the addresses in that too

if (file_exists(IP_LIST_FILE)) {
	$s_list = new GetIPAddrsIPList(IP_LIST_FILE);
	$s_nets = $s_list->get_networks();
	$s_addrs = $s_list->get_addrs();
}

// If we have an IP_RES_FILE, we also want the addresses in that

if (file_exists(IP_RES_FILE)) {
	$h_list = new GetIPAddrsReserved(IP_RES_FILE);
	$h_nets = $h_list->get_networks();
	$h_addrs = $h_list->get_addrs();
}

// Just in case there's a network in one of the lists that isn't in the
// other, combine the network lists, and sort numerically.

$all_nets = array_unique(array_merge($l_list->get_networks(),
$o_list->get_networks(), $s_nets, $h_nets));

sort($all_nets);

// Now we can make the grid

$grid = new IPGrid($all_nets, $s_addrs, $l_list->get_addrs(),
$o_list->get_addrs(), $h_addrs);

echo $grid->show_grid("70%");

// Bit of explanatory text

$key = new auditKey();
$c = 1;

$note_text = "The list above is generated from the following sources.";

if (file_exists(IP_LIST_FILE))
	$note_text .=  "<br>" . $c++ . ") A full network scan run by the
	<tt>becta_subnet_audit.sh</tt> script on <strong>" .
	$s_list->get_scan_host() . "</strong> at " . $s_list->get_timestamp() .
	".";

$note_text .= "<br>" . $c++ . ") The audit files used to generate the
information on all the other auditor pages. You can see how up-to-date these
files are by viewing the <a href=\"index.php\">platform audit page</a>.";

if (file_exists(IP_RES_FILE))
	$note_text .= "<br>" . $c++ . ") A hand-edited file stored at <tt>" .
	IP_RES_FILE . "</tt> which is used to store reserved IP addresses. This
	file was last edited at " . $h_list->get_timestamp(). ".";

echo $key->open_key(),

$key->key_row("resolved", false, "addresses pulled from the
<tt>becta_subnet_audit.sh</tt> scan. They were found to be live, and have a
DNS entry"),

$key->key_row("onlylive", false, "addresses not resolved by the network scan,
but which the live audit files say are used. May or may not be live, check
the border colour"),

$key->key_row("ping", false, "addresses found to be live by the network
scan, but which have no reverse DNS record, and which are not known to the
auditor. They should probably be added to the DNS"),

$key->key_row("obsolete", false, "addresses not seen as live in the network
scan, and which do not have a DNS record. However, the servers which own
these addresses are still known to the auditor, either as
&quot;obsolete&quot; or &quot;trash&quot;"),

$key->key_row("onlyresolve", false, " <tt>becta_subnet_audit.sh</tt> found
these addresses have a reverse DNS entry, but could not be pinged It iss
possible the host was temporarily down or unavailable when the scan was
run."),

$key->key_row("reserved", false, "addresses taken from a hand-made and
-maintained file, stored at <tt>" . IP_RES_FILE .  "</tt>, and used to list
&quot;reserved&quot; IP addresses which, though they are unlikely to be
found in a network scan, should not be used for anything. They may be used
for a DHCP pool, a laptop, or a server which is often switched off."),

$key->key_row("boxred", false, "addresses which did not respond
to a ping on the last subnet audit. These addresses are most likely not
currently in use, but check before re-using them"),

$key->key_row("boxgreen", false, "addresses which responded to a
ping on the last scan, and should definitely be considered live"),

$key->close_key(),

$key->key_extra_info("Note on address collection", $note_text);

$pg->close_page();

?>
