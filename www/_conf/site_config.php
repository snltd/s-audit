<?php

//============================================================================
//
// site_config.php
// ---------------
//
// Configuration for the s-audit's web interface. Tells the other PHP
// scripts where things are.
//
// Edit to suit your site.
//
//============================================================================

define("ROOT", $_SERVER["DOCUMENT_ROOT"]);
	// Site root. Usually document root

define("SITE_NAME", "s-audit");
	// Site name, displayed on all page titles

define("BASE_DIR", "/var/s-audit");
	// Root of /var data

define("AUDIT_DIR", BASE_DIR . "/audit");
	// Root of audit data

define("LIVE_DIR", AUDIT_DIR . "/live");
	// Directory holding live audit files

define("URI_MAP_FILE", AUDIT_DIR . "/dns/uri_list.txt");
	// Path to map file generated by s-audit_dns_resolver.sh

define("IP_LIST_FILE", AUDIT_DIR . "/ip_list/ip_list.txt");
	// Path to map file generated by s-audit_subnet.sh

define("IP_RES_FILE", AUDIT_DIR . "/ip_list/ip_list_reserved.txt");
	// Path to hand-made list of "reserved" IP addresses

define("PER_PAGE", 20);
	// How many servers to show on each page. This refers to GLOBAL zones

define("STRIP_DOMAIN", "localnet");
	// If this is defined, the domain name will be stripped off the
	// hostnames on the IP listing page and NFS shares on the security page

define("ALOM_SFX", "-lom." . STRIP_DOMAIN);
	// When we try to guess ALOM IP addresses, we tag this on to the end of
	// the hostname, then do a DNS lookup

define("SHOW_SERVER_INFO", true);
	// Whether or not to expose server information in the footer

define("DOC_URL", "/docs");
	// URL to top of document tree

define("CB_URL", DOC_URL . "/_files");
	// URL to code blocks and HTMLized code blocks

define("CB_DIR", ROOT . "/docs/_files");
	// Where the codeBlock class finds syntax coloured script files. (Path,
	// not URL.)

define("PKG_DEF_DIR", ROOT . "/_lib/pkg_defs");
	// Where to find package definition files

define("PCH_DEF_DIR", ROOT . "/_lib/pch_defs");
	// Where to find patch definition files

// We always need our basic classes

require_once(ROOT . "/_lib/display_classes.php");
require_once(ROOT . "/_lib/colours.php");
require_once(ROOT . "/_lib/key_classes.php");

?>
